module trans/desugar

imports
  src-gen/signatures/SL-sig
  libstratego-lib

signature
  sorts FunDefSeq ArgSeq

  constructors
    ProgramDesug : List(FunDef) * Expr -> Program

    FunCallDesug : String * ArgSeq -> Expr
    ArgSeq : Expr * ArgSeq -> ArgSeq
    NoArgSeq : ArgSeq

    MethodCallDesug: Expr * String * ArgSeq -> Expr

  constructors // built-ins
    SLDefineFunction : Expr -> Expr
    SLNanoTime : Expr
    SLNewObject : Expr
    SLPrintln : Expr -> Expr
    SLReadln : Expr
    SLStacktrace : Expr

rules

  desugar-editor:
    (selected, position, ast, path, project-path) -> (filename, result)
    with
      filename := <guarantee-extension(|"aterm")> path;
      result   := <desugar-all> ast
  
  desugar-all = innermost(desugar); alltd(unquote(?'"'))

  desugar:
    Program(funcs) -> ProgramDesug(funcs, FunCallDesug("main", NoArgSeq()))
  
  desugar:
    FunCall(name, args) -> FunCallDesug(name, <desugar-args> args)
  
  desugar:
    IfNoElse(cond, block) -> IfThenElse(cond, block, Block([]))
  
  desugar-args:
    [] -> NoArgSeq()
  
  desugar-args:
    [e|es] -> ArgSeq(e, <desugar-args> es)
  
  desugar:
    MethodCall(e, name, args) -> MethodCallDesug(e, name, <desugar-args> args)
  
  desugar:
    FunCallDesug("defineFunction", ArgSeq(e, NoArgSeq())) -> SLDefineFunction(e)
  
  desugar:
    FunCallDesug("nanoTime", NoArgSeq()) -> SLNanoTime()
  
  desugar:
    FunCallDesug("new", NoArgSeq()) -> SLNewObject()
  
  desugar:
    FunCallDesug("println", ArgSeq(e, NoArgSeq())) -> SLPrintln(e)
  
  desugar:
    FunCallDesug("readln", NoArgSeq()) -> SLReadln()
  
  desugar:
    FunCallDesug("stacktrace", NoArgSeq()) -> SLStacktrace()
